#pragma once
#include <iostream>
#include <list>
#include <cmath>
#include <iomanip>
#include <algorithm>
#include <fstream>
#include <string>
#include <vector>
#include <sstream>
#include <deque>
#include <ctime>
#include <cstring>
#include <cstdlib>
#include <map>
using namespace std;
long long myPow(long long x, long long p) {
	if (p == 0) { return 1; }
	if (p == 1) { return x; }
	return x * myPow(x, p - 1);  //power function
}

long long numdigits(long long r) {
	long long number_of_digits = 0;

	do {
		++number_of_digits;
		r /= 10;
	} while (r>0);
	return number_of_digits; //determines length of a number
}
bool isPrime(long long n) {
	if (n <= 3) {
		return n > 1;
	}

	if (n % 2 == 0 || n % 3 == 0) {
		return false;
	}

	for ( long long i = 5; i * i <= n; i += 6) {
		if (n % i == 0 || n % (i + 2) == 0) {
			return false;
		}
	}

	return true;
}


bool isTruncleft(long long q) {
	if (isPrime(q)) {
		if ((q < 10) && isPrime(q)) {
			return true;
		}
		else {
			q /= 10;
			return isTruncleft(q);
		}
	}
	return false;
}

bool isTruncright(long long q) {
	long long h = numdigits(q);
	if (isPrime(q)) {
		if ((q < 10) && isPrime(q)) {
			return true;
		}
		else {
			q = q % myPow(10, h - 1);
			return isTruncright(q);
		}
	}
	return false;
}

