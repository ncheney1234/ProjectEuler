#pragma once
#include <iostream>
#include <list>
#include <cmath>
#include <iomanip>
#include <algorithm>
#include <fstream>
#include <string>
#include <vector>
#include <sstream>
#include <deque>
#include <ctime>
#include <cstring>
#include <cstdlib>
#include <map>
using namespace std;

list<int> digitlist(long long x) {
	list<int> mylist;
	while (x >= 10) {
		mylist.push_back(x % 10);
		x = x / 10;
	}

	mylist.push_back(x);
	reverse(mylist.begin(), mylist.end());


	return mylist;
}

bool isPrime(unsigned long long n) {
	if (n <= 3) {
		return n > 1;
	}

	if (n % 2 == 0 || n % 3 == 0) {
		return false;
	}

	for (unsigned long long i = 5; i * i <= n; i += 6) {
		if (n % i == 0 || n % (i + 2) == 0) {
			return false;
		}
	}

	return true;
}
long double eulertotient(long long r) {
	long double totient = 1L;
	long double f = r;
	if (r == 1) { return 1; }

	if (isPrime(r)) { return r - 1; }
	for (long long n = 2; n <= sqrt(r); n++) {
		long double p = n;
		if (r % n == 0 && isPrime(n)) {
			totient *= (1 - (1 / p));
		}
		if (r % n == 0 && isPrime(r / n) && n*n != r) {
			long double a = n;
			totient *= (1 - (a / f));
		}
	}
	return ceil(r * totient);
}
